using Core.Spawners;
using NUnit.Framework;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Tests
{
    public class SpawnGroupsFactory
    {
        public static IEnumerable WorldItemGroupsTestCases
        {
            get
            {
                var groups = new List<WorldItemsGroup>();
                yield return new TestCaseData(groups.ToArray()).Returns(0).
                    SetName("Empty keyed pools: 0");
                var group = new WorldItemsGroup();
                group.MaxCellsDelaySpawn = 1;
                group.MinCellsDelaySpawn = 1;
                group.Cases.Add(new SpawnCase(KeyedPoolsFactory.POOL1.PoolKey, 100));
                groups.Add(group);
                yield return new TestCaseData(groups.ToArray()).Returns(1).
                    SetName("Empty keyqed pools: pool1");
                //groups.Add(new KeyedPool("pool2"));
                //groups.Add(new KeyedPool("pool3"));
                yield return new TestCaseData(groups.ToArray()).Returns(3).
                    SetName("Empty keyqed pools: pool1, pool2, pool3");
                //groups.Add(new KeyedPool("pool2"));
                //groups.Add(new KeyedPool("pool3"));
                //groups.Add(new KeyedPool("pool4"));
                yield return new TestCaseData(groups.ToArray()).Returns(4).
                    SetName("Empty keyqed pools: pool1, pool2, pool3, pool2, pool3, pool4");
            }
        }
    }
}
