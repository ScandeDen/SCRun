using Core.Pools;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UnityEngine;

namespace Core
{
    public class PoolsManager
    {
        private static PoolsManager instance;
        public static PoolsManager Instance
        {
            get
            {
                if (instance == null)
                    instance = new PoolsManager();
                return instance;
            }
        }

        private Dictionary<int, GameObjectPool> pools = 
            new Dictionary<int, GameObjectPool>();

        private PoolsManager()
        {

        }

        public GameObjectPool GetPool(int poolKey)
        {
            return pools[poolKey];
        }

        public int GetPoolIndex(int poolKey)
        {
            return pools.Keys.ToList().IndexOf(poolKey);
        }

        public List<string> GetPoolNames()
        {
            var result = new List<string>();
            foreach (var pool in pools.Values)
            {
                result.Add(pool.name);
            }
            return result;
        }

        public void AddPool(int poolKey = -1, GameObjectPool pool)
        {
            if (poolKey == -1)
            {
                pools.Add(pools.Count, pool);
                return;
            }
            pools[poolKey] = pool;
        }

        public void Clear()
        {
            pools.Clear();
        }
    }
}
